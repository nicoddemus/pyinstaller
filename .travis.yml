language: python

# Use the new container-based Travis infrastructure.
sudo: false

branches:
  except:
    - /pyup\/.*/

# Make sure we are on Ubuntu 14.04
dist: trusty

# Cache pip packages. Explicitly name the pip-cache directory since we
# use a custom `install` step which annuls `cache: pip`.
cache:
  directories:
    - $HOME/.cache/pip

os:
  - linux

jobs:
  fast_finish: true
  include:
    # macOS is first to account for the delay in starting the build on macOS. This prevents the build from hanging on
    # macOS as the last job to finish in a stage.
    - stage: Test - Libraries
      os: osx
      language: generic
      python: 3.6
      cache:
        directories:
          - $HOME/Library/Caches/pip
      install:
        # Update pip.
        - python -m pip install -U pip setuptools wheel | cat

        # Install dependencies for PyInstaller tests.
        - pip install -U -r tests/requirements-tools.txt -r tests/requirements-libraries.txt | cat

        # Install PyInstaller.
        - pip install -e . | cat
      script: py.test -n 3 --maxfail 3 tests/functional/test_libraries.py tests/functional/test_hooks

  allow_failures:
      # Just tests how PyInstaller performs with upcoming Python 3.6
      - python: "nightly"

addons:
  # Python packages should be installed by "pip" via the "test/requirements-library.txt" specification.
  apt:
    packages:
    # lxml dependencies.
    - libxml2-dev
    - libxslt1-dev
    # pyttsx dependencies.
    - libespeak1
    # SciPy dependencies.
    - gfortran
    - libatlas-base-dev

before_install:
  # Skip build if the commit message contains [skip travis] or [travis skip]
  - >
      echo "$TRAVIS_COMMIT_MESSAGE"
      | grep -E  '\[(skip travis|travis skip)\]'
      && echo "[skip travis] has been found, exiting."
      && exit 0 || true

  # Perform the manual steps on osx to install python3 and activate venv
  - >
      if [[ $TRAVIS_OS_NAME == 'osx' ]]; then
          brew update;
          brew install python3;
          python3 -m venv venv;
          source venv/bin/activate;
      fi

  # Compile bootloader
  - cd bootloader
  - python waf distclean all
  - cd ..

install:
  # Update pip.
  - python -m pip install -U pip setuptools wheel | cat

  # Install dependencies for tests.
  - pip install -U -r tests/requirements-tools.txt -r tests/requirements-libraries.txt | cat

  # Install PyInstaller.
  - pip install -e . | cat

before_script:
  - >
      if [[ $TRAVIS_OS_NAME == 'linux' ]]; then
          # Run X Virtual Framebuffer to imitate a display
          export DISPLAY=:99.0;
          sh -e /etc/init.d/xvfb start;
          sleep 3 # give xvfb some time to start
      fi


script:
  - true

notifications:
    irc:
        channels:
            - "irc.freenode.org#pyinstaller"
        use_notice: true
        # skip_join: true would require +n mode *not to be set on #pyinstaller
        skip_join: false
